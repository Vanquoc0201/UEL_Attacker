import { ethers } from 'ethers';
import tokenAbi from "./erc20-abi.json" assert { type: "json" };
import dotenv from 'dotenv';
dotenv.config();

const provider = new ethers.JsonRpcProvider(process.env.QUICKNODE_RPC_URL);

// PhÃ¢n 1 : Láº¥y thÃ´ng tin tÃ i khoáº£n
// async function main() {
//   const address = "0x96405B4d4286917D212e40d839B2cB0FeeC1af13";
//   const balance = await provider.getBalance(address); // sá»‘ ETH trong tÃ i khoáº£n
//   const blockNumber = await provider.getBlockNumber(); // sá»‘ block hiá»‡n táº¡i
//   const feeData = await provider.getFeeData(); // thÃ´ng tin phÃ­ giao dá»‹ch
//   const tx = await provider.getTransaction("0xa1c07b9f65b28fefb168c94c14886174f17d4b5d42f268239f309a471f5d7d0c"); // thÃ´ng tin giao dá»‹ch
//   const block = await provider.getBlock(blockNumber); // thÃ´ng tin block
//   const nonce = await provider.getTransactionCount("0xf29f4c445c7a3abf54c9ac899b38e4267e29cee1"); // sá»‘ lÆ°á»£ng giao dá»‹ch Ä‘Ã£ thá»±c hiá»‡n
//   const logs = await provider.getLogs({
//     address: "0x6fb81383733800ec4b4a2670aefbd18e7e76f13a", // Má»™t token ERC20 tháº­t trÃªn Sepolia
//     fromBlock: 8690000,
//     toBlock: 8700000,
//   });
//   const network = await provider.getNetwork(); // thÃ´ng tin máº¡ng
//   console.log("Network chain ID:",network.chainId);
//   console.log("Transaction details:", tx);
//   console.log("Block details:", block);
//   console.log("Transaction count (nonce):", nonce);
//   logs.forEach((log, index) => {
//     console.log(`\nðŸ“¦ Log ${index + 1}:`);
//     console.log("Block:", log.blockNumber);
//     console.log("Tx Hash:", log.transactionHash);
//     console.log("Data:", log.data);
//     console.log("Topics:", log.topics);
//   });
//   console.log("ETH balance:", ethers.formatEther(balance));
//   console.log("Block number:", blockNumber);
//   console.log("Gas price:", ethers.formatUnits(feeData.gasPrice, "gwei"), "gwei");
// }

// main();
// Pháº§n 2: TÆ°Æ¡ng tÃ¡c vá»›i Smart Contract
async function main() {
  const contract = new ethers.Contract(
    "0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238",
    tokenAbi,
    provider
  );

  const name = await contract.name();
  const symbol = await contract.symbol();
  const totalSupply = await contract.totalSupply();
  const balance = await contract.balanceOf("0x96405B4d4286917D212e40d839B2cB0FeeC1af13");

  console.log("âœ… Token Name:", name);
  console.log("âœ… Symbol:", symbol);
  console.log("âœ… Total Supply:", ethers.formatUnits(totalSupply, 18));
  console.log("âœ… User Balance:", ethers.formatUnits(balance, 18));
}
/**
 * Náº¿u báº¡n muá»‘n láº¥y Ä‘á»‹a chá»‰ cá»§a logic contract tá»« má»™t proxy contract, báº¡n cÃ³ thá»ƒ sá»­ dá»¥ng Ä‘oáº¡n mÃ£ sau:
const proxyContract = new ethers.Contract(
  "0x1c7D4B196Cb0C7B01d743Fbc6116a902379C7238",
  proxyAbi, // ABI báº¡n gá»­i á»Ÿ trÃªn
  provider
);

const logicAddress = await proxyContract.implementation();
console.log("ðŸŽ¯ Logic contract address:", logicAddress);

 */

main();